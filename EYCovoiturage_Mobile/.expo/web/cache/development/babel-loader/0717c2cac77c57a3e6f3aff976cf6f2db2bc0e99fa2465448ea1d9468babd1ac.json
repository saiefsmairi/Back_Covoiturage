{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useEffect as $cKEhs$useEffect } from \"react\";\nimport { useToggle as $cKEhs$useToggle } from \"@react-aria/toggle\";\nimport { filterDOMProps as $cKEhs$filterDOMProps, mergeProps as $cKEhs$mergeProps } from \"@react-aria/utils\";\nimport { useField as $cKEhs$useField } from \"@react-aria/label\";\nimport { useToggleState as $cKEhs$useToggleState } from \"@react-stately/toggle\";\nfunction $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {\n  var _ref = (0, $cKEhs$useToggle)(props, state, inputRef),\n    inputProps = _ref.inputProps,\n    isSelected = _ref.isSelected,\n    isPressed = _ref.isPressed,\n    isDisabled = _ref.isDisabled,\n    isReadOnly = _ref.isReadOnly;\n  var isIndeterminate = props.isIndeterminate;\n  (0, $cKEhs$useEffect)(function () {\n    if (inputRef.current) inputRef.current.indeterminate = isIndeterminate;\n  });\n  return {\n    inputProps: _objectSpread(_objectSpread({}, inputProps), {}, {\n      checked: isSelected\n    }),\n    isSelected: isSelected,\n    isPressed: isPressed,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  };\n}\nvar $1ae600c947479353$export$31440636951aa68c = new WeakMap();\nvar $1ae600c947479353$export$a3077e9c93f7360f = new WeakMap();\nvar $1ae600c947479353$export$d5679492e2864181 = new WeakMap();\nfunction $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {\n  var isDisabled = props.isDisabled,\n    name = props.name;\n  var _ref2 = (0, $cKEhs$useField)(_objectSpread(_objectSpread({}, props), {}, {\n      labelElementType: \"span\"\n    })),\n    labelProps = _ref2.labelProps,\n    fieldProps = _ref2.fieldProps,\n    descriptionProps = _ref2.descriptionProps,\n    errorMessageProps = _ref2.errorMessageProps;\n  (0, $1ae600c947479353$export$a3077e9c93f7360f).set(state, descriptionProps.id);\n  (0, $1ae600c947479353$export$d5679492e2864181).set(state, errorMessageProps.id);\n  var domProps = (0, $cKEhs$filterDOMProps)(props, {\n    labelable: true\n  });\n  (0, $1ae600c947479353$export$31440636951aa68c).set(state, name);\n  return {\n    groupProps: (0, $cKEhs$mergeProps)(domProps, _objectSpread({\n      role: \"group\",\n      \"aria-disabled\": isDisabled || undefined\n    }, fieldProps)),\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  };\n}\nfunction $fba3e38d5ca8983f$export$353b32fc6898d37d(props, state, inputRef) {\n  var toggleState = (0, $cKEhs$useToggleState)({\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isSelected: state.isSelected(props.value),\n    onChange: function onChange(isSelected) {\n      if (isSelected) state.addValue(props.value);else state.removeValue(props.value);\n      if (props.onChange) props.onChange(isSelected);\n    }\n  });\n  var res = (0, $406796ff087fe49b$export$e375f10ce42261c5)(_objectSpread(_objectSpread({}, props), {}, {\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isDisabled: props.isDisabled || state.isDisabled,\n    name: props.name || (0, $1ae600c947479353$export$31440636951aa68c).get(state)\n  }), toggleState, inputRef);\n  return _objectSpread(_objectSpread({}, res), {}, {\n    inputProps: _objectSpread(_objectSpread({}, res.inputProps), {}, {\n      \"aria-describedby\": [state.validationState === \"invalid\" ? (0, $1ae600c947479353$export$d5679492e2864181).get(state) : null, (0, $1ae600c947479353$export$a3077e9c93f7360f).get(state)].filter(Boolean).join(\" \") || undefined\n    })\n  });\n}\nexport { $406796ff087fe49b$export$e375f10ce42261c5 as useCheckbox, $1e9fce0cfacc738b$export$49ff6f28c54f1cbe as useCheckboxGroup, $fba3e38d5ca8983f$export$353b32fc6898d37d as useCheckboxGroupItem };","map":{"version":3,"names":["$406796ff087fe49b$export$e375f10ce42261c5","props","state","inputRef","_ref","$cKEhs$useToggle","inputProps","isSelected","isPressed","isDisabled","isReadOnly","isIndeterminate","$cKEhs$useEffect","current","indeterminate","_objectSpread","checked","$1ae600c947479353$export$31440636951aa68c","WeakMap","$1ae600c947479353$export$a3077e9c93f7360f","$1ae600c947479353$export$d5679492e2864181","$1e9fce0cfacc738b$export$49ff6f28c54f1cbe","name","_ref2","$cKEhs$useField","labelElementType","labelProps","fieldProps","descriptionProps","errorMessageProps","set","id","domProps","$cKEhs$filterDOMProps","labelable","groupProps","$cKEhs$mergeProps","role","undefined","$fba3e38d5ca8983f$export$353b32fc6898d37d","toggleState","$cKEhs$useToggleState","value","onChange","addValue","removeValue","res","get","validationState","filter","Boolean","join"],"sources":["C:\\Users\\saief\\OneDrive\\Desktop\\front\\EYCovoiturage\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\index.ts","C:\\Users\\saief\\OneDrive\\Desktop\\front\\EYCovoiturage\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\useCheckbox.ts","C:\\Users\\saief\\OneDrive\\Desktop\\front\\EYCovoiturage\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\useCheckboxGroup.ts","C:\\Users\\saief\\OneDrive\\Desktop\\front\\EYCovoiturage\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\utils.ts","C:\\Users\\saief\\OneDrive\\Desktop\\front\\EYCovoiturage\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\useCheckboxGroupItem.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport type {CheckboxAria} from './useCheckbox';\nexport {useCheckbox} from './useCheckbox';\nexport {useCheckboxGroup} from './useCheckboxGroup';\nexport {useCheckboxGroupItem} from './useCheckboxGroupItem';\nexport type {AriaCheckboxGroupItemProps, AriaCheckboxGroupProps, AriaCheckboxProps} from '@react-types/checkbox';\nexport type {CheckboxGroupAria} from './useCheckboxGroup';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {InputHTMLAttributes, RefObject, useEffect} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useToggle} from '@react-aria/toggle';\n\nexport interface CheckboxAria {\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the checkbox is selected. */\n  isSelected: boolean,\n  /** Whether the checkbox is in a pressed state. */\n  isPressed: boolean,\n  /** Whether the checkbox is disabled. */\n  isDisabled: boolean,\n  /** Whether the checkbox is read only. */\n  isReadOnly: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component.\n * Checkboxes allow users to select multiple items from a list of individual items, or\n * to mark one individual item as selected.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useToggleState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckbox(props: AriaCheckboxProps, state: ToggleState, inputRef: RefObject<HTMLInputElement>): CheckboxAria {\n  let {inputProps, isSelected, isPressed, isDisabled, isReadOnly} = useToggle(props, state, inputRef);\n\n  let {isIndeterminate} = props;\n  useEffect(() => {\n    // indeterminate is a property, but it can only be set via javascript\n    // https://css-tricks.com/indeterminate-checkboxes/\n    if (inputRef.current) {\n      inputRef.current.indeterminate = isIndeterminate;\n    }\n  });\n\n  return {\n    inputProps: {\n      ...inputProps,\n      checked: isSelected\n    },\n    isSelected,\n    isPressed,\n    isDisabled,\n    isReadOnly\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxGroupProps} from '@react-types/checkbox';\nimport {checkboxGroupDescriptionIds, checkboxGroupErrorMessageIds, checkboxGroupNames} from './utils';\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {useField} from '@react-aria/label';\n\nexport interface CheckboxGroupAria {\n  /** Props for the checkbox group wrapper element. */\n  groupProps: DOMAttributes,\n  /** Props for the checkbox group's visible label (if any). */\n  labelProps: DOMAttributes,\n  /** Props for the checkbox group description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the checkbox group error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox group component.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox group.\n * @param state - State for the checkbox group, as returned by `useCheckboxGroupState`.\n */\nexport function useCheckboxGroup(props: AriaCheckboxGroupProps, state: CheckboxGroupState): CheckboxGroupAria {\n  let {isDisabled, name} = props;\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    // Checkbox group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n  checkboxGroupDescriptionIds.set(state, descriptionProps.id);\n  checkboxGroupErrorMessageIds.set(state, errorMessageProps.id);\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  // Pass name prop from group to all items by attaching to the state.\n  checkboxGroupNames.set(state, name);\n\n  return {\n    groupProps: mergeProps(domProps, {\n      role: 'group',\n      'aria-disabled': isDisabled || undefined,\n      ...fieldProps\n    }),\n    labelProps,\n    descriptionProps,\n    errorMessageProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupState} from '@react-stately/checkbox';\n\nexport const checkboxGroupNames = new WeakMap<CheckboxGroupState, string>();\nexport const checkboxGroupDescriptionIds = new WeakMap<CheckboxGroupState, string>();\nexport const checkboxGroupErrorMessageIds = new WeakMap<CheckboxGroupState, string>();\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxGroupItemProps} from '@react-types/checkbox';\nimport {CheckboxAria, useCheckbox} from './useCheckbox';\nimport {checkboxGroupDescriptionIds, checkboxGroupErrorMessageIds, checkboxGroupNames} from './utils';\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport {RefObject} from 'react';\nimport {useToggleState} from '@react-stately/toggle';\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component contained within a checkbox group.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useCheckboxGroupState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckboxGroupItem(props: AriaCheckboxGroupItemProps, state: CheckboxGroupState, inputRef: RefObject<HTMLInputElement>): CheckboxAria {\n  const toggleState = useToggleState({\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isSelected: state.isSelected(props.value),\n    onChange(isSelected) {\n      if (isSelected) {\n        state.addValue(props.value);\n      } else {\n        state.removeValue(props.value);\n      }\n\n      if (props.onChange) {\n        props.onChange(isSelected);\n      }\n    }\n  });\n\n  let res = useCheckbox({\n    ...props,\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isDisabled: props.isDisabled || state.isDisabled,\n    name: props.name || checkboxGroupNames.get(state)\n  }, toggleState, inputRef);\n\n  return {\n    ...res,\n    inputProps: {\n      ...res.inputProps,\n      'aria-describedby': [\n        state.validationState === 'invalid' ? checkboxGroupErrorMessageIds.get(state) : null,\n        checkboxGroupDescriptionIds.get(state)\n      ].filter(Boolean).join(' ') || undefined\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}