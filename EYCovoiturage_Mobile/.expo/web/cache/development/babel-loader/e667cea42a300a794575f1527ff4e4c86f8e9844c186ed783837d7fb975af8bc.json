{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useControlledState as $4oA3P$useControlledState } from \"@react-stately/utils\";\nfunction $fc909762b330b746$export$61c6a8c84e605fb6(props) {\n  var _ref = (0, $4oA3P$useControlledState)(props.isOpen, props.defaultOpen || false, props.onOpenChange),\n    _ref2 = _slicedToArray(_ref, 2),\n    isOpen = _ref2[0],\n    setOpen = _ref2[1];\n  return {\n    isOpen: isOpen,\n    setOpen: setOpen,\n    open: function open() {\n      setOpen(true);\n    },\n    close: function close() {\n      setOpen(false);\n    },\n    toggle: function toggle() {\n      setOpen(!isOpen);\n    }\n  };\n}\nexport { $fc909762b330b746$export$61c6a8c84e605fb6 as useOverlayTriggerState };","map":{"version":3,"names":["$fc909762b330b746$export$61c6a8c84e605fb6","props","_ref","$4oA3P$useControlledState","isOpen","defaultOpen","onOpenChange","_ref2","_slicedToArray","setOpen","open","close","toggle"],"sources":["C:\\Users\\saief\\OneDrive\\Desktop\\front\\EYCovoiturage\\node_modules\\@react-stately\\overlays\\dist\\packages\\@react-stately\\overlays\\src\\index.ts","C:\\Users\\saief\\OneDrive\\Desktop\\front\\EYCovoiturage\\node_modules\\@react-stately\\overlays\\dist\\packages\\@react-stately\\overlays\\src\\useOverlayTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useOverlayTriggerState} from './useOverlayTriggerState';\n\nexport type {OverlayTriggerProps} from '@react-types/overlays';\nexport type {OverlayTriggerState} from './useOverlayTriggerState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {OverlayTriggerProps} from '@react-types/overlays';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface OverlayTriggerState {\n  /** Whether the overlay is currently open. */\n  readonly isOpen: boolean,\n  /** Sets whether the overlay is open. */\n  setOpen(isOpen: boolean): void,\n  /** Opens the overlay. */\n  open(): void,\n  /** Closes the overlay. */\n  close(): void,\n  /** Toggles the overlay's visibility. */\n  toggle(): void\n}\n\n/**\n * Manages state for an overlay trigger. Tracks whether the overlay is open, and provides\n * methods to toggle this state.\n */\nexport function useOverlayTriggerState(props: OverlayTriggerProps): OverlayTriggerState  {\n  let [isOpen, setOpen] = useControlledState(props.isOpen, props.defaultOpen || false, props.onOpenChange);\n\n  return {\n    isOpen,\n    setOpen,\n    open() {\n      setOpen(true);\n    },\n    close() {\n      setOpen(false);\n    },\n    toggle() {\n      setOpen(!isOpen);\n    }\n  };\n}\n"],"mappings":";;ACgCO,SAASA,0CAAuBC,KAA0B,EAAwB;EACvF,IAAAC,IAAA,GAAwB,IAAAC,yBAAkB,EAACF,KAAA,CAAMG,MAAM,EAAEH,KAAA,CAAMI,WAAW,IAAI,KAAK,EAAEJ,KAAA,CAAMK,YAAY;IAAAC,KAAA,GAAAC,cAAA,CAAAN,IAAA;IAAlGE,MAAA,GAAAG,KAAA;IAAQE,OAAA,GAAAF,KAAA;EAEb,OAAO;YACLH,MAAA;aACAK,OAAA;IACAC,IAAA,WAAAA,KAAA,EAAO;MACLD,OAAA,CAAQ,IAAI;IACd;IACAE,KAAA,WAAAA,MAAA,EAAQ;MACNF,OAAA,CAAQ,KAAK;IACf;IACAG,MAAA,WAAAA,OAAA,EAAS;MACPH,OAAA,CAAQ,CAACL,MAAA;IACX;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}